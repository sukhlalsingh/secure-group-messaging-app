{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CreateGroup=()=>{const[groupName,setGroupName]=useState('');const[members,setMembers]=useState([]);// List of selected user IDs\nconst[userList,setUserList]=useState([]);// List of all users\nconst[error,setError]=useState(null);// Fetch users from the backend\nuseEffect(()=>{const fetchUsers=async()=>{try{const response=await axios.get('http://localhost:5000/api/users');console.log(response.data);// Log to inspect the structure of the response\n// Directly set the userList to the response data (which is an array of users)\nsetUserList(response.data);}catch(err){setError('Failed to load users');console.error(err);}};fetchUsers();},[]);// Handle member selection\nconst handleMemberSelection=userId=>{setMembers(prevMembers=>prevMembers.includes(userId)?prevMembers.filter(id=>id!==userId)// Remove if already selected\n:[...prevMembers,userId]// Add if not selected\n);};const handleCreateGroup=async()=>{if(!groupName||members.length===0){alert('Please provide a group name and select members');return;}const token=localStorage.getItem('token');// Assuming you store the token in localStorage\nif(!token){alert('You must be logged in to create a group.');return;}try{const response=await axios.post('http://localhost:5000/api/groups/create',{groupName,members},{headers:{Authorization:`Bearer ${token}`// Add the token in the Authorization header\n}});alert('Group created: '+response.data.group.name);}catch(err){console.error(err);alert('Failed to create group');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Create Group\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Group Name\",value:groupName,onChange:e=>setGroupName(e.target.value)}),/*#__PURE__*/_jsx(\"h3\",{children:\"Select Members\"}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error}),/*#__PURE__*/_jsx(\"div\",{children:userList.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"Loading users...\"}):userList.map(user=>/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:members.includes(user._id),onChange:()=>handleMemberSelection(user._id)}),user.email]})},user._id))}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCreateGroup,children:\"Create\"})]});};export default CreateGroup;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","CreateGroup","groupName","setGroupName","members","setMembers","userList","setUserList","error","setError","fetchUsers","response","get","console","log","data","err","handleMemberSelection","userId","prevMembers","includes","filter","id","handleCreateGroup","length","alert","token","localStorage","getItem","post","headers","Authorization","group","name","children","type","placeholder","value","onChange","e","target","style","color","map","user","checked","_id","email","onClick"],"sources":["C:/Users/Sukh.LalSingh/Downloads/secure-group-messaging-app/client/src/components/CreateGroup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CreateGroup = () => {\r\n    const [groupName, setGroupName] = useState('');\r\n    const [members, setMembers] = useState([]); // List of selected user IDs\r\n    const [userList, setUserList] = useState([]); // List of all users\r\n    const [error, setError] = useState(null);\r\n\r\n    // Fetch users from the backend\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/users');\r\n                console.log(response.data); // Log to inspect the structure of the response\r\n\r\n                // Directly set the userList to the response data (which is an array of users)\r\n                setUserList(response.data);\r\n            } catch (err) {\r\n                setError('Failed to load users');\r\n                console.error(err);\r\n            }\r\n        };\r\n\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    // Handle member selection\r\n    const handleMemberSelection = (userId) => {\r\n        setMembers((prevMembers) =>\r\n            prevMembers.includes(userId)\r\n                ? prevMembers.filter((id) => id !== userId) // Remove if already selected\r\n                : [...prevMembers, userId] // Add if not selected\r\n        );\r\n    };\r\n\r\n    const handleCreateGroup = async () => {\r\n        if (!groupName || members.length === 0) {\r\n            alert('Please provide a group name and select members');\r\n            return;\r\n        }\r\n\r\n        const token = localStorage.getItem('token'); // Assuming you store the token in localStorage\r\n\r\n        if (!token) {\r\n            alert('You must be logged in to create a group.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post(\r\n                'http://localhost:5000/api/groups/create',\r\n                {\r\n                    groupName,\r\n                    members,\r\n                },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`, // Add the token in the Authorization header\r\n                    },\r\n                }\r\n            );\r\n            alert('Group created: ' + response.data.group.name);\r\n        } catch (err) {\r\n            console.error(err);\r\n            alert('Failed to create group');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Create Group</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Group Name\"\r\n                value={groupName}\r\n                onChange={(e) => setGroupName(e.target.value)}\r\n            />\r\n\r\n            <h3>Select Members</h3>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <div>\r\n                {userList.length === 0 ? (\r\n                    <p>Loading users...</p>\r\n                ) : (\r\n                    userList.map((user) => (\r\n                        <div key={user._id}>\r\n                            <label>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={members.includes(user._id)}\r\n                                    onChange={() => handleMemberSelection(user._id)}\r\n                                />\r\n                                {user.email}\r\n                            </label>\r\n                        </div>\r\n                    ))\r\n                )}\r\n            </div>\r\n\r\n            <button onClick={handleCreateGroup}>Create</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateGroup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}